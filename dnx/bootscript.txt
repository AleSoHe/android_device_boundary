setenv distro_bootpart 1

setexpr rval *0x020CC068 \& 0x180
if itest.s "x$rval" -eq "x100"; then
	echo "Starting fastboot..."
	fastboot 0
else
	if itest.s "x$rval" -eq "x80"; then
		setenv distro_bootpart 2;
	fi
fi
mw.l 0x020cc068 0 1

setenv bootargs ''

if ${fs}load ${devtype} ${devnum}:${distro_bootpart} 10800000 uEnv.txt ; then
    env import -t 10800000 $filesize
fi

fdt_file=imx6q-dnx.dtb;

setenv fdt_addr 0x12000000
if ${fs}load ${devtype} ${devnum}:${distro_bootpart} $fdt_addr ${prefix}$fdt_file ; then
	fdt addr $fdt_addr
	setenv fdt_high 0xffffffff
else
	echo "!!!! Error loading ${prefix}$fdt_file";
	exit;
fi

cmd_xxx_present=
fdt resize
if itest.s "x" != "x${cmd_custom}" ; then
	run cmd_custom
	cmd_xxx_present=1;
fi

# ------------------- Displays detection
if itest.s "x" != "x${cmd_lvds}" ; then
	run cmd_lvds
	cmd_xxx_present=1;
fi

if itest.s "x" == "x${cmd_xxx_present}" ; then
	echo "!!!!!!!!!!!!!!!!"
	echo "warning: your u-boot may be outdated, please upgrade"
	echo "!!!!!!!!!!!!!!!!"
fi

setenv bootargs "$bootargs quiet console=${console},115200 vmalloc=128M consoleblank=0 rootwait"
setenv bootargs $bootargs androidboot.hardware=freescale androidboot.soc=i.MX${cpu}

if itest.s "xmmc" == "x$devtype" ; then
	if itest.s "x0" == "x$devnum" ; then
		bootdev=2100000.aips-bus/2198000.usdhc
	elif itest.s "x1" == "x$devnum" ; then
		bootdev=2100000.aips-bus/219c000.usdhc
	fi
elif itest.s "xusb" == "x$devtype" ; then
	bootdev=2100000.aips-bus/2184200.usb/ci_hdrc.1
elif itest.s "xsata" == "x$devtype" ; then
	bootdev=2200000.sata
fi
setenv bootargs $bootargs androidboot.bootdevice=$bootdev
setenv bootargs $bootargs androidboot.console=$console
setenv bootargs $bootargs androidboot.selinux=permissive

if itest.s "x" != "x${serial#}" ; then
	setenv bootargs $bootargs androidboot.serialno="${serial#}"
else
	# add serial number based on MAC address
	setexpr mac_hi *0x021bc630
	setexpr mac_lo *0x021bc620
	setenv bootargs $bootargs androidboot.serialno="$mac_hi$mac_lo"
fi

if itest.s "x" != "x$disable_giga" ; then
        setenv bootargs $bootargs fec.disable_giga=1
fi

if itest.s "x" != "x$wlmac" ; then
	setenv bootargs $bootargs wlcore.mac=$wlmac
fi

if itest.s "x" == "x$cma" ; then
	cma=448M
fi
setenv bootargs $bootargs cma=$cma

if itest.s "x" != "x$gpumem" ; then
	setenv bootargs $bootargs galcore.contiguousSize=$gpumem
fi

if itest.s "x" != "x$show_fdt" ; then
	fdt print /
fi

if itest.s "x" != "x$show_env" ; then
	printenv
fi

kernel=zImage
ramdisk=uramdisk.img
setenv stdout serial;

${fs}load ${devtype} ${devnum}:$distro_bootpart 10800000 $kernel && \
echo "loaded $kernel" && \
${fs}load ${devtype} ${devnum}:$distro_bootpart 12800000 $ramdisk && \
echo "loaded $ramdisk" && bootz 10800000 12800000 $fdt_addr ;

echo "Error loading kernel image"
