setenv bootargs enable_wait_mode=off
setenv nextcon 0;
setenv bootargs $bootargs console=ttymxc1,115200 vmalloc=400M consoleblank=0 ;
setenv bootpart 1

setexpr rval *0x020CC068 \& 0x180
if itest.s "x$rval" -eq "x100"; then
	echo "----------- run fastboot here";
else
	if itest.s "x$rval" -eq "x80"; then
		setenv bootpart 2;
	fi
fi

mw.l 0x020cc068 0 1

if itest.s x == "x$dtbname" ; then
	dtbname="imx6";
	if itest.s x6SOLO == "x$cpu" ; then
		dtbname=${dtbname}dl-;
	elif itest.s x6DL == "x$cpu" ; then
		dtbname=${dtbname}dl-;
	else
		dtbname=${dtbname}q-;
	fi

	if itest.s x == "x$board" ; then
		board=sabrelite
	fi

	dtbname=${dtbname}${board}.dtb;
fi

if ${fs}load ${dtype} ${disk}:$bootpart 13000000 $dtbname ; then
	echo loaded dtb $dtbname;
	fdt addr 13000000
else
	echo error loading dtb $dtbname;
	exit;
fi

if test -n "$tempfuse" ; then
	setenv bootargs $bootargs thermal.fuse_override=$tempfuse
fi

if itest.s "x" != "x$wlmac" ; then
        setenv bootargs $bootargs wl12xx.mac=$wlmac
fi

setenv have_lvds 0
i2c dev 2
if i2c probe 0x04 ; then
	if test "0" -eq $nextcon; then
		setenv fbmem "fbmem=20M";
	else
		setenv fbmem ${fbmem},20M
	fi
	setexpr nextcon $nextcon + 1
	setenv have_lvds 1;
else
	fdt rm hannstar
	echo "------ no Freescale display";
fi

if i2c probe 0x38 ; then
	if itest.s "xLDB-WXGA" == "x$panel"; then
		screenres=1280,800
		fdt rm okaya1024x600
	else
		screenres=1024,600
		fdt rm lg1280x800
	fi
	if test "0" -eq $nextcon; then
		setenv fbmem "fbmem=20M";
	else
		setenv fbmem ${fbmem},20M
	fi
	setexpr nextcon $nextcon + 1
	setenv bootargs $bootargs ft5x06.screenres=$screenres tsdev=ft5x06
	if itest.s "x" -ne "x$calibration" ; then
		setenv bootargs $bootargs ft5x06.calibration=$calibration
	fi
	setenv have_lvds 1;
else
	if itest.s "xLDB-WXGA" == "x$panel"; then
		setexpr nextcon $nextcon + 1
		setenv have_lvds 1;
	else
		echo "------ no focaltech display";
		fdt rm lg1280x800
		fdt rm okaya1024x600
	fi
fi

if itest $have_lvds -ne 0; then
	echo "no LVDS display";
	fdt rm lvds_display;
fi

if i2c probe 0x48 ; then
	if itest.s "x" -eq "x$calibration" ; then
		setenv bootargs $bootargs tsc2004.calibration=-67247,-764,272499173,324,69283,-8653010,65536
	else
		setenv bootargs $bootargs tsc2004.calibration=$calibration
	fi
	if test "0" -eq $nextcon; then
		setenv fbmem "fbmem=20M";
	else
		setenv fbmem ${fbmem},20M
	fi
	setexpr nextcon $nextcon + 1
else
	echo "------ no 800x480 display";
	fdt rm lcd_display;
fi

i2c dev 1 ;
if i2c probe 0x50 ; then
        if test "0" -eq $nextcon; then
                setenv fbmem "fbmem=28M";
        else
                setenv fbmem ${fbmem},28M
        fi
	setexpr nextcon $nextcon + 1

        if itest.s x == x$allow_noncea ; then
        	setenv bootargs $bootargs mxc_hdmi.only_cea=1;
        	echo "only CEA modes allowed on HDMI port";
        else
                setenv bootargs $bootargs mxc_hdmi.only_cea=0;
                echo "non-CEA modes allowed on HDMI, audio may be affected";
        fi
else
	echo "------ no HDMI monitor";
	fdt rm hdmi_display;
fi

bootdev=mmcblk2
setenv bootargs $bootargs $fbmem androidboot.hardware=freescale
if itest.s "xsata" == "x$dtype" ; then
	bootdev=sda
elif itest.s "xusb" == "x$dtype" ; then
	bootdev=sda
elif itest.s "xmmc" == "x$dtype" ; then
	if itest 1 == ${disk}; then
		bootdev=mmcblk3
	fi
fi

setenv bootargs $bootargs androidboot.bootdev=$bootdev

if itest.s "x" != "x$disable_giga" ; then
        setenv bootargs $bootargs fec.disable_giga=1
fi

kernel=uImage
ramdisk=uramdisk.img

if kbd ; then
        if itest.s "xv" == "x$keybd" ; then
                kernel=uImage-recovery
                ramdisk=uramdisk-recovery.img
        fi
fi


setenv stdout serial;

${fs}load ${dtype} ${disk}:$bootpart 10800000 $kernel && \
echo "loaded $kernel" && \
${fs}load ${dtype} ${disk}:$bootpart 12800000 $ramdisk && \
echo "loaded $ramdisk" && bootm 10800000 12800000 13000000 ;

echo "Error loading kernel image"
